/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.theme.editor.inspectors;

import es.theme.editor.objects.StringColor;
import java.awt.Color;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author andrea
 */
public class ColorInspector extends javax.swing.JPanel {
    
    StringColor color;
    
    /**
     * Creates new form ColorInspector
     * @param color
     */
    public ColorInspector(StringColor color) {
        initComponents();
        
        this.color = color;
        ChangeColorFromHexInput();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        HexcodeTextField = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        ChooseColorButton = new javax.swing.JButton();

        jLabel1.setText("Color:");

        try {
            HexcodeTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("HHHHHHHH")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        HexcodeTextField.setToolTipText("Enter hex code");
        HexcodeTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                HexcodeTextFieldFocusLost(evt);
            }
        });
        HexcodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HexcodeTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("0x");

        ChooseColorButton.setToolTipText("Choose color from palette");
        ChooseColorButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ChooseColorButton.setContentAreaFilled(false);
        ChooseColorButton.setOpaque(true);
        ChooseColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseColorButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HexcodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ChooseColorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ChooseColorButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(HexcodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ChooseColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseColorButtonActionPerformed
        JColorChooser colorChooser = new JColorChooser(fromHexToColor(color.getColor()));
        
        int r = JOptionPane.showConfirmDialog(null,colorChooser,"Choose color",JOptionPane.OK_CANCEL_OPTION);
        if(r == JOptionPane.OK_OPTION){
            //save color
            color.setColor(colorChooser.getColor());
            ChangeColorFromHexInput();
        }
    }//GEN-LAST:event_ChooseColorButtonActionPerformed

    private void HexcodeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HexcodeTextFieldActionPerformed
        color.setColor(formatToColor(HexcodeTextField.getText()));
        ChangeColorFromHexInput();
    }//GEN-LAST:event_HexcodeTextFieldActionPerformed

    private void HexcodeTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_HexcodeTextFieldFocusLost
        color.setColor(formatToColor(HexcodeTextField.getText()));
        ChangeColorFromHexInput();
    }//GEN-LAST:event_HexcodeTextFieldFocusLost

    private void ChangeColorFromHexInput(){
        HexcodeTextField.setText(color.getColor());
        UpdateButtonColor();
    }
    
    private void UpdateButtonColor(){
        ChooseColorButton.setBackground(fromHexToColor(color.getColor()));
        ChooseColorButton.setForeground(fromHexToColor(color.getColor()));
    }
    
    private Color fromHexToColor(String hex){
        String rgb = hex.substring(0,6);
        String alpha = hex.substring(6,8);
        
        rgb = rgb.replace(' ', '0');
        alpha = alpha.replace(' ', 'F');
        
        return new Color(
                Integer.valueOf(rgb.substring(0,2),16),
                Integer.valueOf(rgb.substring(2,4),16),
                Integer.valueOf(rgb.substring(4,6),16),
                Integer.valueOf(alpha.substring(0,2),16)
        );
    }
    
    private String formatToColor(String str){
        String rgb = Integer.valueOf(str.substring(0,6),16).toString();
        String alpha = Integer.valueOf(str.substring(6,8),16).toString();
        
//        rgb = rgb.replace(' ', '0');
//        alpha = alpha.replace(' ', 'F');
        
        return rgb.concat(alpha);
    }
            
    

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChooseColorButton;
    private javax.swing.JFormattedTextField HexcodeTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
